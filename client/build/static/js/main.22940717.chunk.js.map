{"version":3,"sources":["components/Form/Form.module.css","components/Form/Form.jsx","redux/authReducer.js","redux/sendObjectCreatorReducer.js","redux/trafficTableReducer.js","redux/reduxStore.js","api/api.js","components/Form/FormContainer.jsx","components/Header/Header.jsx","components/InputField/InputField.jsx","components/SendObjectCreator/SendObjectCreator.jsx","components/SendObjectCreator/SendObjectCreatorContainer.jsx","components/TableItem/TableItem.jsx","components/TrafficTable/TrafficTable.jsx","components/TrafficTable/TrafficTableContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Form","props","id","style","form","className","onChange","e","emailValue","target","value","updateEmailValue","type","htmlFor","passwordValue","updatePasswordValue","onClick","sendAuthData","initialState","email","password","authReducer","state","action","newEmail","newPassword","sendObjectCreatorReducer","propertiesValueObject","i","newCount","object","propertyCount","obj","nameInput","newPropertyValue","trafficData","totalTraffic","isFetching","trafficTableReducer","tempTrafficObjects","map","item","index","trafficPercent","Math","floor","filter","console","log","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","window","instance","axios","withCredentials","baseURL","user","post","getState","then","res","data","sendObject","getTrafficObject","a","fetch","method","mode","body","response","r","json","FormContainer","connect","dispatch","updateEmailAC","updatePasswordAC","Header","to","InputField","inputValue","updateInputValueMethod","name","SendObjectCreator","changePropertyCount","min","max","defaultValue","inputPack","changePropertyValue","inputRender","SendObjectCreatorContainer","changePropertyCountAC","changePropertyValueAC","getPropertyValue","getPropertyValueAC","TableItem","number","title","traffic","TrafficTable","reload","TrafficTableContainer","this","setFetchingStatus","setTrafficData","componentDidMount","bind","React","Component","WithTrafficTableDataContainerComponent","withRouter","setTrafficDataAC","refreshTrafficData","isFetchingAC","App","path","render","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.22940717.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__B86yQ\"};","import React from 'react';\r\nimport style from './Form.module.css';\r\nimport 'materialize-css';\r\n\r\nconst Form = (props) => {\r\n\r\n  const updateEmailValue = (e) => {\r\n    let emailValue = e.target.value;\r\n    props.updateEmailValue(emailValue);\r\n  };\r\n\r\n  const updatePasswordValue = (e) => {\r\n    let passwordValue = e.target.value;\r\n    props.updatePasswordValue(passwordValue);\r\n  };\r\n\r\n  return(\r\n    <div id={style.form} className=\"z-depth-4\">\r\n      <h1>Auth</h1>\r\n      <div className=\"input-field\">\r\n        <input onChange={updateEmailValue} id=\"email\" type=\"text\" className=\"\"/>\r\n        <label htmlFor=\"email\">E-mail</label>\r\n      </div>\r\n      <div className=\"input-field\">\r\n        <input onChange={updatePasswordValue} id=\"password\" type=\"password\" className=\"\"/>\r\n        <label htmlFor=\"password\">Password</label>\r\n      </div>\r\n      <button onClick={() => props.sendAuthData()} className=\"waves-effect waves-light btn\">SEND</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;","const UPDATE_EMAIL = 'UPDATE_EMAIL';\r\nconst UPDATE_PASSWORD = 'UPDATE_PASSWORD';\r\n\r\nlet initialState = {\r\n  email: \"\",\r\n  password: \"\"\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case UPDATE_EMAIL:\r\n      return({\r\n        ...state,\r\n        email: action.newEmail\r\n      });\r\n    case UPDATE_PASSWORD:\r\n      return({\r\n        ...state,\r\n        password: action.newPassword\r\n      });\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport const updateEmailAC = newEmail =>\r\n  ({type: UPDATE_EMAIL, newEmail});\r\nexport const updatePasswordAC = newPassword =>\r\n  ({type: UPDATE_PASSWORD, newPassword});\r\n\r\n\r\nexport default authReducer;\r\n\r\n","const CHANGE_PROPERTY_COUNT = 'CHANGE_PROPERTY_COUNT';\r\nconst CHANGE_PROPERTY_VALUE = 'CHANGE_PROPERTY_VALUE';\r\nconst GET_PROPERTY_VALUE = 'GET_PROPERTY_VALUE';\r\n\r\nlet initialState = {\r\n  \"object\": {\r\n    \"property-1\": \"\",\r\n    \"property-2\": \"\",\r\n    \"property-3\": \"\"\r\n  },\r\n  \"propertyCount\": 3\r\n};\r\n\r\nconst sendObjectCreatorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_PROPERTY_COUNT:\r\n      let propertiesValueObject = {};\r\n\r\n      for (let i = 1; i <= +action.newCount; i++)\r\n        propertiesValueObject[\"property-\" + i] = \"\";\r\n\r\n      return(\r\n        {\r\n          ...state,\r\n          object: {...propertiesValueObject},\r\n          propertyCount: +action.newCount\r\n        }\r\n      );\r\n    case CHANGE_PROPERTY_VALUE:\r\n      let obj = {...state.object};\r\n      obj[action.nameInput] = action.newPropertyValue;\r\n      return (\r\n        {\r\n          ...state,\r\n          object: {\r\n            ...obj\r\n          }\r\n        }\r\n      );\r\n    case GET_PROPERTY_VALUE:\r\n      return state.object[action.nameInput];\r\n\r\n    default: return({...state});\r\n  }\r\n};\r\n\r\nexport const changePropertyCountAC = newCount =>\r\n  ({type: CHANGE_PROPERTY_COUNT, newCount});\r\n\r\nexport const changePropertyValueAC = (newPropertyValue, nameInput) =>\r\n  ({type: CHANGE_PROPERTY_VALUE, newPropertyValue, nameInput});\r\n\r\nexport const getPropertyValueAC = nameInput =>\r\n  ({type: GET_PROPERTY_VALUE, nameInput});\r\n\r\nexport default sendObjectCreatorReducer;","const REFRESH_TRAFFIC_DATA = 'REFRESH_TRAFFIC_DATA';\r\nconst SET_TRAFFIC_DATA = 'SET_TRAFFIC_DATA';\r\nconst CHANGE_FETCHING_STATUS = 'CHANGE_FETCHING_STATUS';\r\n\r\nlet initialState = {\r\n  trafficData: [],\r\n  totalTraffic: 0,\r\n  isFetching: false\r\n};\r\n\r\nconst trafficTableReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_TRAFFIC_DATA:\r\n      try {\r\n        let totalTraffic = 0;\r\n        let tempTrafficObjects = [];\r\n        action.trafficData.map(item => totalTraffic += item['traffic']);\r\n        action.trafficData.map((item, index) =>\r\n          tempTrafficObjects[index] = {...item, trafficPercent: Math.floor(item['traffic']/(totalTraffic/100))});\r\n        return ({\r\n          ...state,\r\n          trafficData: tempTrafficObjects.filter(item => item['trafficPercent'] > 2),\r\n          totalTraffic: totalTraffic\r\n        });\r\n      }\r\n      catch (e) {\r\n        console.log(e)\r\n      }\r\n      return ({...state});\r\n    case REFRESH_TRAFFIC_DATA:\r\n      return ({\r\n        trafficData: [],\r\n        totalTraffic: 0,\r\n        isFetching: false\r\n      });\r\n    case CHANGE_FETCHING_STATUS:\r\n      return ({\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      });\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport const refreshTrafficDataAC = () =>\r\n  ({type: REFRESH_TRAFFIC_DATA});\r\n\r\nexport const setTrafficDataAC = trafficData =>\r\n  ({type: SET_TRAFFIC_DATA, trafficData});\r\n\r\nexport const isFetchingAC = isFetching =>\r\n  ({type: CHANGE_FETCHING_STATUS, isFetching});\r\n\r\nexport default trafficTableReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport sendObjectCreatorReducer from \"./sendObjectCreatorReducer\";\r\nimport trafficTableReducer from \"./trafficTableReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  authReducer,\r\n  sendObjectCreatorReducer,\r\n  trafficTableReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import * as axios from 'axios';\r\nimport store from \"../redux/reduxStore\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"http://localhost:8000/\"\r\n});\r\n\r\nexport const user = {\r\n  auth() {\r\n    try {\r\n      return instance.post('auth', store.getState().authReducer)\r\n        .then(res => {\r\n          console.log(res.data ? 'Пользователь авторизован': 'Не верный email или пароль');\r\n          return res.data;\r\n        });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n};\r\n\r\nexport const sendObject = () => {\r\n  try {\r\n    return instance.post('send-object', store.getState().sendObjectCreatorReducer.object)\r\n      .then(res => {return console.log(res.data)});\r\n  }\r\n  catch (e) {\r\n    console.log(e)\r\n  }\r\n};\r\n\r\nexport const getTrafficObject = async () => {\r\n  try {\r\n    let response = await fetch('http://localhost:8000/traffic-table', {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: ''\r\n    });\r\n\r\n    let r = response.json();\r\n\r\n    return r;\r\n  }\r\n  catch (e) {\r\n    console.log(e)\r\n  }\r\n};\r\n\r\n","import React from \"react\";\r\nimport Form from \"./Form\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateEmailAC, updatePasswordAC} from \"../../redux/authReducer\";\r\nimport {user} from \"../../api/api\";\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    email: state.authReducer.email,\r\n    password: state.authReducer.password\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateEmailValue: newEmail => dispatch(updateEmailAC(newEmail)),\r\n    updatePasswordValue: newPassword => dispatch(updatePasswordAC(newPassword)),\r\n    sendAuthData: () => user.auth()\r\n  }\r\n};\r\n\r\nconst FormContainer = connect(mapStateToProps, mapDispatchToProps)(Form);\r\n\r\nexport default FormContainer;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  return(\r\n    <>\r\n      <nav className='teal waves-light'>\r\n        <div className=\"nav-wrapper\">\r\n          <ul id=\"nav-mobile\" className=\"hide-on-med-and-down\">\r\n            <li><NavLink to=\"/Auth\">Auth</NavLink></li>\r\n            <li><NavLink to=\"/send-object\">Send Object</NavLink></li>\r\n            <li><NavLink to=\"/traffic-table\">Traffic Table</NavLink></li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst InputField = props => {\r\n\r\n  const updateInputValue = e => {\r\n    let inputValue = e.target.value;\r\n    props.updateInputValueMethod(inputValue, props.name);\r\n  };\r\n\r\n  return(\r\n    <div className=\"input-field\">\r\n      <input\r\n        onChange={updateInputValue}\r\n        id={props.name}\r\n        type={props.type}\r\n        value={props.value}\r\n      />\r\n      <label htmlFor={props.name}>{props.name}</label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputField;","import React from \"react\";\r\nimport InputField from \"../InputField/InputField\";\r\n\r\nconst SendObjectCreator = props => {\r\n\r\n  const inputRender = () => {\r\n    let inputPack = [];\r\n    for (let i = 1; i <= props.propertyCount; i++) {\r\n      inputPack[i] =\r\n        <InputField\r\n          name={'property-'+i}\r\n          type='text'\r\n          updateInputValueMethod={props.changePropertyValue}\r\n        />\r\n    }\r\n    return inputPack;\r\n  };\r\n\r\n  const changePropertyCount = e =>{\r\n    let inputValue = e.target.value;\r\n    props.changePropertyCount(inputValue);\r\n  };\r\n\r\n  return(\r\n    <div className='send-object-wrapper'>\r\n      <form action=\"#\">\r\n        <h2>Property count: {props.propertyCount}</h2>\r\n        <p className=\"range-field\">\r\n          <input\r\n            onChange={changePropertyCount}\r\n            type=\"range\"\r\n            min=\"3\"\r\n            max=\"9\"\r\n            defaultValue='3'\r\n          />\r\n        </p>\r\n      </form>\r\n\r\n      <div className=\"form\">\r\n        {inputRender()}\r\n        <button\r\n          onClick={props.sendObject}\r\n          className=\"waves-effect waves-light btn\"\r\n        >SEND OBJECT</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendObjectCreator;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport SendObjectCreator from \"./SendObjectCreator\";\r\nimport {changePropertyCountAC, changePropertyValueAC, getPropertyValueAC} from \"../../redux/sendObjectCreatorReducer\";\r\nimport {sendObject} from \"../../api/api\";\r\n\r\nlet mapStateToProps = state => {\r\n  return {\r\n    object: state.sendObjectCreatorReducer.object,\r\n    propertyCount: state.sendObjectCreatorReducer.propertyCount\r\n  }\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changePropertyCount: newCount =>\r\n      dispatch(changePropertyCountAC(newCount)),\r\n    changePropertyValue: (newPropertyValue, nameInput) =>\r\n      dispatch(changePropertyValueAC(newPropertyValue, nameInput)),\r\n    getPropertyValue: nameInput =>\r\n      dispatch(getPropertyValueAC(nameInput)),\r\n    sendObject\r\n  }\r\n};\r\n\r\nconst SendObjectCreatorContainer = connect(mapStateToProps, mapDispatchToProps)(SendObjectCreator);\r\n\r\nexport default SendObjectCreatorContainer;","import React from \"react\";\r\n\r\nconst TableItem = props => {\r\n  return(\r\n    <>\r\n      <tr>\r\n        <td>{props.number}</td>\r\n        <td>{props.title}</td>\r\n        <td>{props.traffic}</td>\r\n        <td>{props.trafficPercent}%</td>\r\n      </tr>\r\n    </>\r\n  )\r\n};\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport TableItem from \"../TableItem/TableItem\";\r\nimport './TrafficTable.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst TrafficTable = props => {\r\n  return(\r\n    <div className=\"table\">\r\n      <div className=\"table-header z-depth-2\">\r\n        <h2>Traffic Table</h2>\r\n        <span>Total Traffic: {props.totalTraffic}</span>\r\n        <NavLink to='/traffic-table' onClick={props.reload} className='waves-effect waves-light btn reload-btn'> </NavLink>\r\n      </div>\r\n      {\r\n        props.isFetching ?\r\n          <div className=\"preloader-wrapper big active\">\r\n            <div className=\"spinner-layer spinner-waves-light\">\r\n              <div className=\"circle-clipper left\">\r\n                <div className=\"circle\"></div>\r\n              </div>\r\n              <div className=\"gap-patch\">\r\n                <div className=\"circle\"></div>\r\n              </div>\r\n              <div className=\"circle-clipper right\">\r\n                <div className=\"circle\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          :\r\n          <table className='striped'>\r\n            <thead>\r\n            <tr>\r\n              <th>Number</th>\r\n              <th>Title</th>\r\n              <th>Traffic</th>\r\n              <th>Traffic Percent</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {\r\n              props.trafficData.map((item, index) =>\r\n                <TableItem\r\n                  number={index}\r\n                  title={item['title']}\r\n                  traffic={item['traffic']}\r\n                  trafficPercent={item['trafficPercent']}\r\n                />)\r\n            }\r\n            </tbody>\r\n          </table>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrafficTable;","import React from \"react\";\r\nimport TrafficTable from \"./TrafficTable\";\r\nimport {getTrafficObject} from \"../../api/api\";\r\nimport {isFetchingAC, refreshTrafficDataAC, setTrafficDataAC} from \"../../redux/trafficTableReducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass TrafficTableContainer extends React.Component {\r\n  componentDidMount() {\r\n    this.props.setFetchingStatus(true);\r\n    getTrafficObject()\r\n      .then(r => this.props.setTrafficData(r))\r\n      .then(r => this.props.setFetchingStatus(false));\r\n  }\r\n\r\n  render() {\r\n    return <TrafficTable\r\n      reload={this.componentDidMount.bind(this)}\r\n      totalTraffic={this.props.totalTraffic}\r\n      trafficData={this.props.trafficData}\r\n      isFetching={this.props.isFetching}\r\n    />\r\n  }\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n  return({\r\n    trafficData: state.trafficTableReducer.trafficData,\r\n    totalTraffic: state.trafficTableReducer.totalTraffic,\r\n    isFetching: state.trafficTableReducer.isFetching\r\n  })\r\n};\r\n\r\nlet mapDispatchToProps = dispatch =>{\r\n  return({\r\n    setTrafficData: trafficData => dispatch(setTrafficDataAC(trafficData)),\r\n    refreshTrafficData: () => dispatch(refreshTrafficDataAC()),\r\n    setFetchingStatus: isFetching => dispatch(isFetchingAC(isFetching))\r\n  })\r\n};\r\n\r\nlet WithTrafficTableDataContainerComponent =  withRouter(TrafficTableContainer);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithTrafficTableDataContainerComponent);\r\n","import React from 'react';\nimport './App.css';\nimport FormContainer from \"./components/Form/FormContainer\";\nimport {Route} from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport SendObjectCreatorContainer from \"./components/SendObjectCreator/SendObjectCreatorContainer\";\nimport TrafficTableContainer from \"./components/TrafficTable/TrafficTableContainer\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"app-wrapper-content\">\n        <Route\n          path='/Auth'\n          render={() => <FormContainer store={props.store} />}\n        />\n        <Route\n          path='/send-object'\n          render={() => <SendObjectCreatorContainer  store={props.store}/>}\n        />\n        <Route\n          path='/traffic-table'\n          render={() => <TrafficTableContainer  store={props.store}/>}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./redux/reduxStore\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}